name: PR

on:
  pull_request:
    paths-ignore:
      - 'ci/**'
      - '**/*.md'

env:
  IMAGE_NAME: docker-ecr-ap-training-image

jobs:
  docker-build-and-scan:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
      - name: Build Docker image
        run:
          docker build -t ${{ env.IMAGE_NAME }}:latest . || echo "Build Failed"
        working-directory: build
  docker-publish-dev:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
      - name: Get release version
        id: get_version
        run: echo RELEASE_VERSION=$(echo ${GITHUB_REF:10}) >> $GITHUB_ENV
      - name: Build Docker Image
        env:
          DEV_AWS_ACCESS_KEY_ID: ${{ secrets.DEV_ECR_AWS_ACCESS_KEY_ID }}
          DEV_AWS_SECRET_ACCESS_KEY: ${{ secrets.DEV_ECR_AWS_SECRET_ACCESS_KEY}}
          DEV_AWS_SESSION_TOKEN: ${{ secrets.DEV_ECR_AWS_SESSION_TOKEN }}
          DEV_AWS_ACCOUNT: ${{ secrets.DEV_ECR_AWS_ACCOUNT }}
          AWS_REGION: eu-west-2
          SEM_VER: "2"
        run:
          export DEV_AWS_ACCESS_KEY_ID DEV_AWS_SECRET_ACCESS_KEY DEV_AWS_SESSION_TOKEN ;
          export AWS_REGION DEV_AWS_ACCOUNT ;
          chmod 777 ./build-dev.sh ;
          ./build-dev.sh
        working-directory: build
  format:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v1

      - name: Set up Python 3.8
        uses: actions/setup-python@v1
        with:
          python-version: 3.8

      - name: Install Black
        run: pip install black

      - name: Run black --check .
        id: check-formatting
        run: black --check .
        continue-on-error: true

      - name: If needed, commit black changes to the pull request
        if: ${{ steps.check-formatting.outcome == 'failure' }}
        run: |
          black .
          git config --global user.name ${{ secrets.CI_GITHUB_USERNAME }}
          git config --global user.email ${{ secrets.CI_GITHUB_EMAIL }}
          git remote set-url origin https://x-access-token:${{ secrets.GITHUB_TOKEN }}@github.com/$GITHUB_REPOSITORY
          git checkout $GITHUB_HEAD_REF
          git commit -am "Fixup: Format Python code with Black"
          git push
